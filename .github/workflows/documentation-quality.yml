name: Documentation Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check markdown formatting
        id: format-check
        run: ./.github/scripts/check-formatting.sh
        continue-on-error: true
        
      - name: Run markdown linting
        id: lint-check
        run: ./.github/scripts/check-linting.sh
        continue-on-error: true
        
      - name: Create PR comment
        if: github.event_name == 'pull_request'
        run: |
          ./.github/scripts/create-comment.sh \
            "${{ steps.format-check.outputs.format_status }}" \
            "${{ steps.format-check.outputs.format_details }}" \
            "${{ steps.lint-check.outputs.lint_status }}" \
            "${{ steps.lint-check.outputs.lint_details }}"
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('comment_body.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
            
      - name: Set final status
        run: |
          ./.github/scripts/final-status.sh \
            "${{ steps.format-check.outputs.format_status }}" \
            "${{ steps.lint-check.outputs.lint_status }}"
